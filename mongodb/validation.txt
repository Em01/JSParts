By default everything defined within a Schema is optional.

const courseSchema = new mongoose.Schema({
  name: { type: String, required: true },
  isPublished: Boolean,
  price: {
    type: Number,
    required: function() { return this.isPublished }
  }
})

Additional built in validators:
String: min length, max length, match(regexp), enum(array of validators e.g category)
Numbers: min & max

can also manually call validate function. This returns a promise of void.
await course.validate()
course.validate((err) => {
  if(err) {}
})
only meaningful in mongoose

Custom Validators:
type: Array,
validate: {
  validator: function(v) {
    return v.length > 0
  },
  message: 'A course should have at least one tag.'
}

Async validators: For when you have to read from a remote http service or database.
